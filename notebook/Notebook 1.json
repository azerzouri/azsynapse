{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "azSparky",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "csharp"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8ad6dfa9-faf9-449e-a7a5-0dc9cda0acf7/resourceGroups/az_sandBox_synapse/providers/Microsoft.Synapse/workspaces/az-sandbox-synapse-analytics/bigDataPools/azSparky",
				"name": "azSparky",
				"type": "Spark",
				"endpoint": "https://az-sandbox-synapse-analytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/azSparky",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%%spark\n",
					"spark.sql(\"DROP TABLE IF EXISTS aztblscala\")\n",
					"spark.sql(\"DROP TABLE IF EXISTS aztbl\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"%%spark\n",
					"val df = spark.read.option(\"header\",true).csv(\"abfss://azsandboxfilesys@azsandboxlake2.dfs.core.windows.net/test/StormEvents_locations-ftp_v1.0_d2019_c20200922.csv\")\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"aztblscala\")\n",
					"df.printSchema()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"YEARMONTH"
							],
							"values": [
								"YEARMONTH"
							],
							"yLabel": "YEARMONTH",
							"xLabel": "YEARMONTH",
							"aggregation": "COUNT",
							"aggByBackend": false
						},
						"aggData": "{\"YEARMONTH\":{\"201909\":10}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": false
					}
				},
				"source": [
					"%%pyspark\n",
					"df = spark.read.load('abfss://azsandboxfilesys@azsandboxlake2.dfs.core.windows.net/test/StormEvents_locations-ftp_v1.0_d2019_c20200922.csv', format='csv'\n",
					"## If header exists uncomment line below\n",
					", header=True\n",
					")\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"aztbl\")\n",
					"display(df.limit(10))\n",
					"## df.printSchema()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"YEARMONTH"
							],
							"values": [
								"YEARMONTH"
							],
							"yLabel": "YEARMONTH",
							"xLabel": "YEARMONTH",
							"aggregation": "COUNT",
							"aggByBackend": false
						},
						"aggData": "{\"YEARMONTH\":{\"201904\":543,\"201909\":62,\"201911\":173,\"201912\":223}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": false
					}
				},
				"source": [
					"%%csharp\n",
					"var accountName = \"azsandboxlake2\";\n",
					"var containerName = \"azsandboxfilesys\";\n",
					"var file = \"/test/StormEvents_locations-ftp_v1.0_d2019_c20200922.csv\";\n",
					"\n",
					"// Build the ADLS path to that file\n",
					"var adlsInputPath = $\"abfss://{containerName}@{accountName}.dfs.core.windows.net/{file}\";\n",
					"var inputReader = spark.Read()\n",
					"    .Option(\"header\", true)\n",
					"    .Option(\"delimiter\", \",\")\n",
					"    .Option(\"charset\", \"iso-8859-1\");\n",
					"\n",
					"var inputDataFrame = inputReader.Csv(new string[] {adlsInputPath});\n",
					"\n",
					"// Add a unique ID to our movies list\n",
					"inputDataFrame = inputDataFrame\n",
					"    .WithColumn(\"ID\", Expr(\"uuid()\"));\n",
					"\n",
					"// Display the DataFrame\n",
					"Display(inputDataFrame);"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [],
							"values": [],
							"yLabel": "",
							"xLabel": "",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"aggData": "{}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": true
					}
				},
				"source": [
					"%%sql\n",
					"SELECT  * FROM aztbl LIMIT 10\n",
					"--SELECT * FROM aztblscala LIMIT 10\n",
					""
				],
				"execution_count": 5
			}
		]
	}
}